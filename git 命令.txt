
git config --global http.sslVerify false

git fetch --all
git merge upstream/master
git push origin master
git branch -avv
git remote -v
git status
git log
git reset HEAD~1 --hard
git branch -vv
git clean -fd
git revert mid mid

git reset --merge

netstat -ano
netstat -ano | findstr ESTABLISHED
tasklist | findstr 1428



假设你有3个commit如下：
commit 3
commit 2
commit 1
其中最后一次提交commit 3是错误的，那么可以执行：
git reset --hard HEAD~1
你会发现，HEAD is now at commit 2。
然后再使用git push --force将本次变更强行推送至服务器。这样在服务器上的最后一次错误提交也彻底消失了。


git无法自动忽略suo文件的解决方法
最近发现一个巨烦人的问题，项目里明明已经通过gitignore忽略了.suo文件，但是每次git pull的时候总是还得到.suo文件冲突的提示，也就是说gitignore里忽略suo文件的规则无效，导致了每个提交都会把.suo文件包含进去。项目里的gitignore文件是从GitHub官方的gitignore库拿过来的，理论上应该经过无数人检验了。
上SO一搜，http://stackoverflow.com/questions/11628418/git-cant-ignore-suo-file，原因立现。原来这个.suo文件是在.gitignore之前被提交进服务器的，.gitignore对已经存在服务器里的文件是不起作用的。按照回答里投票最高的答案做了一下，问题解决
git rm --cached project1.v12.suo
git commit -m "Delete suo file from repository"

撤销提交到#43d1f68
git reflog
git reset --hard 43d1f68

从远程创建分支
git checkout -b bugfix upstream/bugfix
git branch --set-upstream bugfix origin/bugfix
git branch --track origin/V1.0.1

强行推送到远程分支
git push -f --set-upstream upstream bugsfix

删除远程分支
git branch -dr upstream/bugfix

删除远程分支
git push origin --delete <branchName>

合并分支
git checkout develop
git merge --no-ff master

获取tag，签出tag文件
git tag
git checkout v2.0.6.0 ./
创建tag，pushtag
git tag v2.0.6.1
git push --tags

netstat -ano -p tcp
netstat -ano | find "ESTABLISHED"